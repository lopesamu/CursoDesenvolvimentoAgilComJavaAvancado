/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import org.junit.Test;
import static org.junit.Assert.*;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class Tests {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    System.setProperty("webdriver.chrome.driver", "C:\\BrowserDrivers\\chromedriver.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void test1() {
    driver.get("http://localhost:8080/Translator/");
    driver.manage().window().setSize(new Dimension(1370, 740));
    driver.findElement(By.id("word")).click();
    driver.findElement(By.id("word")).sendKeys("maçã");
    driver.findElement(By.cssSelector(".btn")).click();
    driver.findElement(By.cssSelector(".text-center")).click();
    driver.findElement(By.cssSelector(".text-center")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".text-center"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    assertThat(driver.findElement(By.cssSelector(".text-center")).getText(), is("apple"));
    driver.close();
  }
  
  @Test
  public void test2() {
    driver.get("http://localhost:8080/Translator/");
    driver.manage().window().setSize(new Dimension(1370, 740));
    driver.findElement(By.id("word")).click();
    driver.findElement(By.id("word")).sendKeys("morango");
    driver.findElement(By.cssSelector(".btn")).click();
    driver.findElement(By.cssSelector(".text-center")).click();
    driver.findElement(By.cssSelector(".text-center")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".text-center"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    assertThat(driver.findElement(By.cssSelector(".text-center")).getText(), is("strawberry"));
    driver.close();
  }
  
  @Test
  public void test3() {
    driver.get("http://localhost:8080/Translator/");
    driver.manage().window().setSize(new Dimension(1370, 740));
    driver.findElement(By.id("word")).click();
    driver.findElement(By.id("word")).sendKeys("arroz");
    driver.findElement(By.cssSelector(".btn")).click();
    driver.findElement(By.cssSelector(".text-center")).click();
    driver.findElement(By.cssSelector(".text-center")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".text-center"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    assertThat(driver.findElement(By.cssSelector(".text-center")).getText(), is("arroz"));
    driver.close();
  }
}
